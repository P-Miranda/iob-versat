$date
	Mon Oct  6 12:12:43 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Merge2_tb $end
$var wire 32 ! out0 [31:0] $end
$var reg 1 " clk $end
$var reg 7 # delay0 [6:0] $end
$var reg 32 $ in0 [31:0] $end
$var reg 32 % in1 [31:0] $end
$var reg 32 & in10 [31:0] $end
$var reg 32 ' in11 [31:0] $end
$var reg 32 ( in12 [31:0] $end
$var reg 32 ) in13 [31:0] $end
$var reg 32 * in14 [31:0] $end
$var reg 32 + in15 [31:0] $end
$var reg 32 , in16 [31:0] $end
$var reg 32 - in17 [31:0] $end
$var reg 32 . in18 [31:0] $end
$var reg 32 / in19 [31:0] $end
$var reg 32 0 in2 [31:0] $end
$var reg 32 1 in20 [31:0] $end
$var reg 32 2 in21 [31:0] $end
$var reg 32 3 in22 [31:0] $end
$var reg 32 4 in23 [31:0] $end
$var reg 32 5 in24 [31:0] $end
$var reg 32 6 in25 [31:0] $end
$var reg 32 7 in26 [31:0] $end
$var reg 32 8 in27 [31:0] $end
$var reg 32 9 in28 [31:0] $end
$var reg 32 : in29 [31:0] $end
$var reg 32 ; in3 [31:0] $end
$var reg 32 < in30 [31:0] $end
$var reg 32 = in31 [31:0] $end
$var reg 32 > in4 [31:0] $end
$var reg 32 ? in5 [31:0] $end
$var reg 32 @ in6 [31:0] $end
$var reg 32 A in7 [31:0] $end
$var reg 32 B in8 [31:0] $end
$var reg 32 C in9 [31:0] $end
$var reg 1 D rst $end
$var reg 1 E run $end
$var reg 1 F running $end
$var integer 32 G i [31:0] $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 7 H delay0 [6:0] $end
$var wire 32 I in0 [31:0] $end
$var wire 32 J in1 [31:0] $end
$var wire 32 K in10 [31:0] $end
$var wire 32 L in11 [31:0] $end
$var wire 32 M in12 [31:0] $end
$var wire 32 N in13 [31:0] $end
$var wire 32 O in14 [31:0] $end
$var wire 32 P in15 [31:0] $end
$var wire 32 Q in16 [31:0] $end
$var wire 32 R in17 [31:0] $end
$var wire 32 S in18 [31:0] $end
$var wire 32 T in19 [31:0] $end
$var wire 32 U in2 [31:0] $end
$var wire 32 V in20 [31:0] $end
$var wire 32 W in21 [31:0] $end
$var wire 32 X in22 [31:0] $end
$var wire 32 Y in23 [31:0] $end
$var wire 32 Z in24 [31:0] $end
$var wire 32 [ in25 [31:0] $end
$var wire 32 \ in26 [31:0] $end
$var wire 32 ] in27 [31:0] $end
$var wire 32 ^ in28 [31:0] $end
$var wire 32 _ in29 [31:0] $end
$var wire 32 ` in3 [31:0] $end
$var wire 32 a in30 [31:0] $end
$var wire 32 b in31 [31:0] $end
$var wire 32 c in4 [31:0] $end
$var wire 32 d in5 [31:0] $end
$var wire 32 e in6 [31:0] $end
$var wire 32 f in7 [31:0] $end
$var wire 32 g in8 [31:0] $end
$var wire 32 h in9 [31:0] $end
$var wire 1 D rst $end
$var wire 1 E run $end
$var wire 1 F running $end
$var reg 5 i counter [4:0] $end
$var reg 7 j delay [6:0] $end
$var reg 32 k out0 [31:0] $end
$upscope $end
$scope task RunAccelerator $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx k
bx j
bx i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
b0 N
b0 M
b0 L
b0 K
b0 J
b0 I
b0 H
bx G
0F
0E
0D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
0"
bx !
$end
#5000
1"
#10000
b0 i
b0 j
1D
0"
#15000
1"
#20000
0D
0"
#25000
1"
#30000
1E
0"
#35000
1"
#40000
1F
0E
0"
#45000
b0 !
b0 k
b1 i
1"
#50000
b0 G
0"
#55000
b10 i
1"
#60000
b1 G
0"
#65000
b11 i
1"
#70000
b10 G
0"
#75000
b100 i
1"
#80000
b11 G
0"
#85000
b101 i
1"
#90000
b100 G
0"
#95000
b110 i
1"
#100000
b101 G
0"
#105000
b111 i
1"
#110000
b110 G
0"
#115000
b1000 i
1"
#120000
b111 G
0"
#125000
b1001 i
1"
#130000
b1000 G
0"
#135000
b1010 i
1"
#140000
b1001 G
0"
#145000
b1011 i
1"
#150000
0F
b1010 G
0"
#155000
1"
#160000
1E
0"
#165000
b0 i
1"
#170000
1F
0E
0"
#175000
b1 i
1"
#180000
b0 G
0"
#185000
b10 i
1"
#190000
b1 G
0"
#195000
b11 i
1"
#200000
b10 G
0"
#205000
b100 i
1"
#210000
b11 G
0"
#215000
b101 i
1"
#220000
b100 G
0"
#225000
b110 i
1"
#230000
b101 G
0"
#235000
b111 i
1"
#240000
b110 G
0"
#245000
b1000 i
1"
#250000
b111 G
0"
#255000
b1001 i
1"
#260000
b1000 G
0"
#265000
b1010 i
1"
#270000
b1001 G
0"
#275000
b1011 i
1"
#280000
0F
b1010 G
0"
#285000
1"
#290000
0"
